// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProShopPlus.Data;

#nullable disable

namespace ProShopPlus.Migrations
{
    [DbContext(typeof(ProShopPlusContext))]
    [Migration("20230517120608_OrderTableAdd")]
    partial class OrderTableAdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ProShopPlus.Models.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AltPhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ProShopPlus.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("ArrivedDate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContactID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Cost")
                        .HasColumnType("REAL");

                    b.Property<DateOnly?>("EstimatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderCode")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Paid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Progress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("StartDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ContactID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ProShopPlus.Models.Repair", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContactID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Cost")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Paid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Progress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("StartDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("TargetDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ContactID");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("ProShopPlus.Models.Order", b =>
                {
                    b.HasOne("ProShopPlus.Models.Contact", "Contact")
                        .WithMany("Orders")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ProShopPlus.Models.Repair", b =>
                {
                    b.HasOne("ProShopPlus.Models.Contact", "Contact")
                        .WithMany("Repairs")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ProShopPlus.Models.Contact", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Repairs");
                });
#pragma warning restore 612, 618
        }
    }
}
